{"version":3,"sources":["components/PokemonListItem.js","components/PokemonInfo.js","services/pokemon-names.js","components/App.js","components/Router.js","index.js"],"names":["PokemonListItem","state","spriteUrl","gameIndex","getApiData","_callee","currentPokemon","regenerator_default","a","wrap","_context","prev","next","fetch","concat","_this","props","name","then","response","json","sent","sprites","front_default","setState","game_indices","game_index","toString","length","t0","console","log","stop","handleClick","this","react_default","createElement","className","onClick","src","alt","React","Component","PokemonInfo","stats","types","moves","x","_x","_x2","push","type","join","stat","replace","base_stat","version_group_details","move_learn_method","move","learned_at_level","level_learned_at","sort","b","parseInt","prevProps","_this$state","hp","attack","defense","specialattack","specialdefense","speed","map","key","pokemons","pokemonJson","results","Object","keys","catch","err","App","autocompletedPokemons","pokemon1","pokemon2","oddClick","setInitialPokemons","pokemonList","handleChange","event","_event$target","target","value","autocomplete","searchBarText","filter","pokemon","startsWith","_this2","Fragment","placeholder","onChange","components_PokemonInfo","index","components_PokemonListItem","number","Router","react_router_dom","react_router","exact","path","component","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.63089efb.chunk.js","sourcesContent":["import React from 'react';\n\nclass PokemonListItem extends React.Component {\n    state = {\n        spriteUrl: '',\n        gameIndex: ''\n    }\n\n    componentDidMount() {\n        this.getApiData();\n\n    }\n\n    getApiData = async () => {\n        try {\n            const currentPokemon = await fetch(`https://pokeapi.co/api/v2/pokemon/${this.props.name}`).then(function (response) {\n                return response.json();\n            });\n            const spriteUrl = currentPokemon.sprites.front_default;\n\n            if (spriteUrl) {\n                this.setState({ spriteUrl });\n            }\n\n            if (currentPokemon.game_indices[0]) {\n                let gameIndex = currentPokemon.game_indices[0].game_index.toString();\n                if(gameIndex.length === 1) {\n                    gameIndex = `00${gameIndex}`;\n                } else if(gameIndex.length === 2) {\n                    gameIndex = `0${gameIndex}`;\n                }\n                this.setState({ gameIndex });\n            }\n\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    handleClick = () => {\n        this.props.handleClick(this.props.name, this.state.spriteUrl);\n    }\n\n    render() {\n        return (\n            <li className=\"flex flex-row\" onClick={this.handleClick}>\n                <img src={this.state.spriteUrl} className=\"thumb\" alt=\"pokemon sprite\" />\n                <div>\n                    <span className=\"number\"> {this.state.gameIndex} </span>\n                    <h1> {this.props.name} </h1>\n                </div>\n            </li>\n        )\n    }\n}\n\nexport default PokemonListItem;","import React from 'react';\n\nclass PokemonInfo extends React.Component {\n    state = {\n        spriteUrl: 'https://i.imgur.com/jOa0vLR.png',\n        stats: {},\n        types: '',\n        moves: []\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.name !== prevProps.name) {\n\n            if (this.props.spriteUrl) {\n                this.setState({ spriteUrl: this.props.spriteUrl })\n            }\n            this.getApiData();\n        }\n    }\n\n    getApiData = async () => {\n        try {\n            const currentPokemon = await fetch(`https://pokeapi.co/api/v2/pokemon/${this.props.name}`).then(function (response) {\n                return response.json();\n            });\n\n            if (currentPokemon.types) {\n                let types = [];\n                for (let x = 0; x < currentPokemon.types.length; x++) {\n                    types.push(currentPokemon.types[x].type.name);\n                }\n                this.setState({ types: types.join(', ') });\n            }\n\n            if (currentPokemon.stats) {\n                let stats = {};\n                for (let x = 0; x < currentPokemon.stats.length; x++) {\n                    stats[currentPokemon.stats[x].stat.name.replace('-', '')] = currentPokemon.stats[x].base_stat;\n                }\n                this.setState({ stats });\n            }\n\n            if (currentPokemon.sprites) {\n                const spriteUrl = currentPokemon.sprites.front_default;\n                this.setState({ spriteUrl });\n            }\n\n            if (currentPokemon.moves) {\n                let moves = [];\n                for (let x = 0; x < currentPokemon.moves.length; x++) {\n                    if (currentPokemon.moves[x].version_group_details[0].move_learn_method.name === 'level-up') {\n                        moves.push({\n                            \"name\": currentPokemon.moves[x].move.name,\n                            \"learned_at_level\": currentPokemon.moves[x].version_group_details[0].level_learned_at\n                        });\n                    }\n                }\n                moves.sort(function(a, b) {\n                    return parseInt(a.learned_at_level) - parseInt(b.learned_at_level);\n                });\n                this.setState({ moves });\n            }\n\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    render() {\n        const { spriteUrl, stats, types, moves } = this.state;\n        return (\n            <article className=\"pokemon-info flex flex-column\">\n                <h1>{this.props.name}</h1>\n                <img src={spriteUrl} className=\"thumb\" alt=\"pokemon sprite\" />\n                <ul className=\"types\">\n                    <li>{types}</li>\n                </ul>\n                <table>\n                    <caption>Base Stats</caption>\n\n                    <tbody>\n                        <tr>\n                            <td>HP</td><td>{stats.hp}</td>\n                        </tr>\n                        <tr>\n                            <td>Attack</td><td>{stats.attack}</td>\n                        </tr>\n                        <tr>\n                            <td>Defense</td><td>{stats.defense}</td>\n                        </tr>\n                        <tr>\n                            <td>Sp. Attack</td><td>{stats.specialattack}</td>\n                        </tr>\n                        <tr>\n                            <td>Sp. Defense</td><td>{stats.specialdefense}</td>\n                        </tr>\n                        <tr>\n                            <td>Speed</td><td>{stats.speed}</td>\n                        </tr>\n                    </tbody>\n                </table>\n                <table>\n                    <caption>Moves</caption>\n\n                    <tbody>\n                        {moves.map(move => (\n                            <tr key={move.name}>\n                                <td>lvl. {move.learned_at_level}</td><td>{move.name}</td>\n                            </tr>\n\n                        ))}\n\n\n                    </tbody>\n                </table>\n\n            </article>\n        )\n    }\n}\n\nexport default PokemonInfo;","export const pokemons = fetch('https://pokeapi.co/api/v2/pokemon/?limit=809').then(function (response) {\n    return response.json();\n}).then(function (pokemonJson) {\n    const results = pokemonJson.results;\n    const names = Object.keys(pokemonJson.results).map(key => {\n        return results[key].name;\n    });\n    return names;\n}).catch(function (err) {\n    console.log(err);\n});","import React from 'react';\nimport PokemonListItem from './PokemonListItem';\nimport PokemonInfo from './PokemonInfo';\nimport { pokemons } from '../services/pokemon-names';\n\nclass App extends React.Component {\n    state = {\n        pokemons: [],\n        autocompletedPokemons: [],\n        pokemon1: {},\n        pokemon2: {},\n        oddClick: true,\n    }\n\n    setInitialPokemons = async () => {\n        try {\n            const pokemonList = await pokemons;\n            this.setState({ pokemons: pokemonList });\n            this.setState({ autocompletedPokemons: pokemonList });\n        } catch (error) {\n            console.log(error);\n        }\n\n    }\n\n    componentDidMount() {\n        this.setInitialPokemons();\n    }\n\n    handleChange = (event) => {\n        const { name, value } = event.target;\n        if (name === 'searchBarText') {\n            this.autocomplete(value);\n        }\n    }\n\n    handleClick = (name, spriteUrl) => {\n        if(this.state.oddClick) {\n            this.setState({pokemon1: {name: name, spriteUrl: spriteUrl}});\n            this.setState({oddClick: false});\n        } else {\n            this.setState({pokemon2: {name: name, spriteUrl: spriteUrl}});\n            this.setState({oddClick: true});\n        }\n\n    }\n\n    autocomplete = (searchBarText) => {\n        let autocompletedPokemons = [];\n        const pokemonList = this.state.pokemons;\n        autocompletedPokemons = pokemonList.filter(pokemon => pokemon.startsWith(searchBarText));\n        this.setState({ autocompletedPokemons });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <header className=\"flex flex-row space-between\">\n                    <h1>POKEDEXITO</h1>\n                    <div className=\"autocomplete\">\n                        <input name=\"searchBarText\" type=\"text\" placeholder=\"Filter...\" onChange={this.handleChange} />\n                    </div>\n                </header>\n                <main>\n                    <div className=\"pokemon-1\">\n                        <PokemonInfo name={this.state.pokemon1.name} spriteUrl={this.state.pokemon1.spriteUrl}/>\n                    </div>\n                    <div className=\"pokemon-2\">\n                        <PokemonInfo name={this.state.pokemon2.name} spriteUrl={this.state.pokemon2.spriteUrl}/>\n                    </div>\n                    <ul className=\"pokemon-list\">\n                        {this.state.autocompletedPokemons.map((pokemon, index) => (\n                            <PokemonListItem name={pokemon} number={index + 1} key={pokemon} handleClick={this.handleClick}/>\n\n                        ))}\n                    </ul>\n                </main>\n                <footer> Thannia Blanchet 2019 </footer>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport App from './App';\n\nconst Router = () => (\n  <BrowserRouter>\n    <Switch>\n      <Route exact path=\"/\" component={App}/>\n    </Switch>\n  </BrowserRouter>\n)\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router />, document.querySelector('#root'));\n"],"sourceRoot":""}